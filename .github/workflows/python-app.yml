# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application
run-name: Python dummy workflow - run by @${{ github.actor }}

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: read
jobs:
  build:
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python calculator_test.py
        ls -la
    - name: Print variables using shell syntax ($VARIABLE)
      run: |
        # echo "CI: $CI"
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
        echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
        echo "GITHUB_RUN_ATTEMPT: $GITHUB_RUN_ATTEMPT"
        echo "GITHUB_JOB: $GITHUB_JOB"
        echo "GITHUB_ACTION: $GITHUB_ACTION"
        echo "GITHUB_ACTION_PATH: $GITHUB_ACTION_PATH"
        echo "GITHUB_ACTION_REPOSITORY: $GITHUB_ACTION_REPOSITORY"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"
        echo "GITHUB_ACTOR_ID: $GITHUB_ACTOR_ID"
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GITHUB_REPOSITORY_ID: $GITHUB_REPOSITORY_ID"
        echo "GITHUB_REPOSITORY_OWNER: $GITHUB_REPOSITORY_OWNER"
        echo "GITHUB_REPOSITORY_OWNER_ID: $GITHUB_REPOSITORY_OWNER_ID"
        echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
        echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        echo "GITHUB_SHA: $GITHUB_SHA"
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
        echo "GITHUB_REF_PROTECTED: $GITHUB_REF_PROTECTED"
        echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
        echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
        echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
        echo "GITHUB_SERVER_URL: $GITHUB_SERVER_URL"
        echo "GITHUB_API_URL: $GITHUB_API_URL"
        echo "GITHUB_GRAPHQL_URL: $GITHUB_GRAPHQL_URL"
        echo "RUNNER_NAME: $RUNNER_NAME"
        echo "RUNNER_OS: $RUNNER_OS"
        echo "RUNNER_ARCH: $RUNNER_ARCH"
        echo "RUNNER_TEMP: $RUNNER_TEMP"
        echo "RUNNER_TOOL_CACHE: $RUNNER_TOOL_CACHE"
    - name: Print variables using contextual syntax
      run: |
        echo "GITHUB_WORKFLOW: ${{ github.workflow }}"
        echo "GITHUB_RUN_ID: ${{ github.run_id }}"
        echo "GITHUB_RUN_NUMBER: ${{ github.run_number }}"
        echo "GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}"
        echo "GITHUB_JOB: ${{ github.job }}"
        echo "GITHUB_ACTION: ${{ github.action }}"
        echo "GITHUB_ACTION_PATH: ${{ github.action_path }}"
        echo "GITHUB_ACTION_REPOSITORY: ${{ github.action_repository }}"
        echo "GITHUB_ACTOR: ${{ github.actor }}"
        echo "GITHUB_ACTOR_ID: ${{ github.actor_id }}"
        echo "GITHUB_REPOSITORY: ${{ github.repository }}"
        echo "GITHUB_REPOSITORY_ID: ${{ github.repository_id }}"
        echo "GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}"
        echo "GITHUB_REPOSITORY_OWNER_ID: ${{ github.repository_owner_id }}"
        echo "GITHUB_EVENT_NAME: ${{ github.event_name }}"
        echo "GITHUB_EVENT_PATH: ${{ github.event_path }}"
        echo "GITHUB_WORKSPACE: ${{ github.workspace }}"
        echo "GITHUB_SHA: ${{ github.sha }}"
        echo "GITHUB_REF: ${{ github.ref }}"
        echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
        echo "GITHUB_REF_PROTECTED: ${{ github.ref_protected }}"
        echo "GITHUB_REF_TYPE: ${{ github.ref_type }}"
        echo "GITHUB_HEAD_REF: ${{ github.head_ref }}"
        echo "GITHUB_BASE_REF: ${{ github.base_ref }}"
        echo "GITHUB_SERVER_URL: ${{ github.server_url }}"
        echo "GITHUB_API_URL: ${{ github.api_url }}"
        echo "GITHUB_GRAPHQL_URL: ${{ github.graphql_url }}"
        echo "RUNNER_NAME: ${{ runner.name }}"
        echo "RUNNER_OS: ${{ runner.os }}"
        echo "RUNNER_ARCH: ${{ runner.arch }}"
        echo "RUNNER_TEMP: ${{ runner.temp }}"
        echo "RUNNER_TOOL_CACHE: ${{ runner.tool_cache }}"
      shell: bash
    - name: Print variables using JSON path syntax (${{ fromJSON(env.GITHUB_EVENT_JSON) }})
      run: env
    - name: printing variables at diferent levels orgs, repo, environ.
      run: |
        echo "${{ vars.ORG_FLAG }}"
    - name: printing variables at diferent levels orgs, repo, environ.
      run: |
        echo "${{ vars.REPO_FLAG }}"
    - name: printing variables at diferent levels orgs, repo, environ.
      if: ${{ vars.ENVIRON_FLAG == 'true' }}
      run: |
        echo "${{ vars.ENVIRON_FLAG }}"